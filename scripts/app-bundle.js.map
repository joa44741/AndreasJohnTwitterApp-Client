{"version":3,"sources":["src/admin.js","src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/formatter.js","src/services/messages.js","src/services/tweet-service.js","src/viewmodels/firehose/firehose.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/mytimeline/mytimeline.js","src/viewmodels/searchusers/searchusers.js","src/viewmodels/settings/settings.js","src/viewmodels/showtimeline/showtimeline.js","src/viewmodels/signup/signup.js","src/viewmodels/statistics/statistics.js","src/viewmodels/tweet/tweet.js","src/viewmodels/tweetmgmt/tweetmgmt.js","src/viewmodels/tweetsoffriends/tweetsoffriends.js","src/viewmodels/usermgmt/usermgmt.js"],"names":["Home","ts","au","tweetService","aurelia","getDataForLoggedInUser","configureRouter","config","router","map","route","name","moduleId","nav","title","mapUnknownRoutes","App","ea","subscribe","console","log","msg","status","wrongLoginData","navigate","replace","trigger","reset","success","isAdmin","setRoot","attached","isAuthenticated","getLoggedInUserPromise","then","userId","res","content","currentUserId","getUserPromise","user","navigateToRoute","debug","testing","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","authenticate","url","post","response","updateTokenAndHeader","publish","catch","message","localStorage","twitter","JSON","stringify","configuration","withHeader","token","authenticated","auth","parse","clearAuthentication","get","obj","delete","Fixtures","Formatter","formatTweetCreationDates","tweets","index","creationDate","fromNow","format","formattedDate","LoginStatus","TweetsLoaded","loadedTweets","MyTweetsLoaded","FriendTweetsLoaded","ValidationFailed","validationType","ImageUploadFinished","imageUrl","UsersDeleted","UsersLoaded","TweetService","data","ac","rt","formatter","tweetsOfFriends","mytweets","users","methods","getTweets","postTweet","picture","tweet","returnedTweet","unshift","getTweetsOfFriends","deleteTweetLocally","id","indexOfMyDeletedTweet","t","_id","indexOf","splice","indexOfGlobalTweet","deleteTweet","statusCode","err","deleteMyTweets","i","length","indexOfDeletedTweet","deleteAllTweetsOfUser","deleteAllTweets","followUser","getUsers","unfollowUser","getTweetsOfUser","getMyTweets","indexOfCurrentUser","u","currentUser","updateSettings","firstName","lastName","nickName","email","password","image","updatedUser","startsWith","register","forwardToLogin","newUser","login","logout","deleteAllUsers","deleteUser","deleteUserLocally","indexOfMyDeletedUser","Firehose","isDeletable","markOwnTweets","tweetsLoadedSubscription","dispose","author","isTweetOfCurrentUser","Login","errorMessage","counter","e","Logout","MyTimeline","isMyTimeline","selectedTweets","deleteSelectedTweets","forEach","detached","SearchForUsers","filteredUsers","filter","filterChanged","toUpperCase","includes","push","Settings","loading","reader","window","FileReader","onload","file","result","readAsDataURL","ShowTimeline","activate","params","isFollowing","followings","followers","Signup","Statistics","usersWithMostFollowers","usersWithMostTweets","slice","sort","a","b","tweetsCount","userCount","tweetCount","Tweet","TweetMgmt","selectedUser","userAll","getUsersList","selectUser","selectedUserId","indexOfUser","tweetId","deleteAllTweetsOfSelectedUser","TweetsOfFriends","UserMgmt","selectedUsers","deleteSelectedUsers","usersLoadedSubscription"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject, Aurelia } from 'aurelia-framework';\nimport TweetService from './services/tweet-service';\n\n@inject(TweetService, Aurelia)\nexport class Home {\n\n  constructor(ts, au) {\n    this.tweetService = ts;\n    this.aurelia = au;\n    this.tweetService.getDataForLoggedInUser();\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'usermgmt'], name: 'usermgmt', moduleId: 'viewmodels/usermgmt/usermgmt', nav: true, title: 'User management' },\n      { route: 'tweetmgmt', name: 'tweetmgmt', moduleId: 'viewmodels/tweetmgmt/tweetmgmt', nav: true, title: 'Tweet management' },\n      { route: 'statistics', name: 'statistics', moduleId: 'viewmodels/statistics/statistics', nav: true, title: 'Statistics' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'admin';\n    });\n  }\n}\n","import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport TweetService from './services/tweet-service';\n\n@inject(TweetService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(ts, au, ea) {\n    this.au = au;\n    this.tweetService = ts;\n\n    ea.subscribe(LoginStatus, msg => {\n      console.log(msg.status.wrongLoginData);\n      if (!msg.status.wrongLoginData) {\n        this.router.navigate('/', { replace: true, trigger: false });\n        this.router.reset();\n        if (msg.status.success === true) {\n          console.log(status);\n          if (msg.status.isAdmin) {\n            au.setRoot('admin');\n          } else {\n            au.setRoot('home');\n            this.tweetService.getDataForLoggedInUser();\n          }\n        } else {\n          au.setRoot('app');\n        }\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: '', name: 'firehose', moduleId: 'viewmodels/firehose/firehose', nav: true, title: 'Global Tweets' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' },\n      { route: 'login', name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' }\n    ]);\n    this.router = router;\n  }\n\n  attached() {\n    if (this.tweetService.isAuthenticated()) {\n      this.tweetService.getLoggedInUserPromise().then(res => {\n        const userId = res.content.currentUserId;\n        return this.tweetService.getUserPromise(userId);\n      }).then(res => {\n        const user = res.content;\n        if (user.isAdmin) {\n          this.au.setRoot('admin').then(() => {\n            this.router.navigateToRoute('usermgmt');\n          });\n        } else {\n          this.tweetService.getDataForLoggedInUser();\n          this.au.setRoot('home').then(() => {\n            this.router.navigateToRoute('firehose');\n          });\n        }\n      });\n    }\n  }\n}\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import { inject, Aurelia } from 'aurelia-framework';\nimport TweetService from './services/tweet-service';\n\n@inject(TweetService, Aurelia)\nexport class Home {\n\n  constructor(ts, au) {\n    this.tweetService = ts;\n    this.aurelia = au;\n    this.tweetService.getDataForLoggedInUser();\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'home'], name: 'firehose', moduleId: 'viewmodels/firehose/firehose', nav: true, title: 'Global Tweets' },\n      { route: 'tweetsoffriends', name: 'tweetsoffriends', moduleId: 'viewmodels/tweetsoffriends/tweetsoffriends', nav: true, title: 'Tweets of friends' },\n      { route: 'searchusers', name: 'searchusers', moduleId: 'viewmodels/searchusers/searchusers', nav: true, title: 'Search for users' },\n      { route: 'mytimeline', name: 'mytimeline', moduleId: 'viewmodels/mytimeline/mytimeline', nav: true, title: 'My Timeline' },\n      { route: 'showtimeline/:id', name: 'showtimeline', moduleId: 'viewmodels/showtimeline/showtimeline', nav: false, title: 'Show Timeline' },\n      { route: 'tweet', name: 'tweet', moduleId: 'viewmodels/tweet/tweet', nav: true, title: 'New Tweet!' },\n      { route: 'settings', name: 'settings', moduleId: 'viewmodels/settings/settings', nav: true, title: 'Settings' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes(instruction => {\n      return 'home';\n    });\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator)\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n  }\n\n  authenticate(url, user) {\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        this.updateTokenAndHeader(status);\n      } else {\n        status.wrongLoginData = true;\n      }\n      this.ea.publish(new LoginStatus(status));\n    }).catch(error => {\n      const status = {\n        success: false,\n        message: 'service not available'\n      };\n      this.ea.publish(new LoginStatus(status));\n    });\n  }\n\n  updateTokenAndHeader(status) {\n    localStorage.twitter = JSON.stringify(status);\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', 'bearer ' + status.token);\n    });\n  }\n\n  isAuthenticated() {\n    let authenticated = false;\n    if (localStorage.twitter !== null) {\n      authenticated = true;\n      this.http.configure(http => {\n        const auth = JSON.parse(localStorage.twitter);\n        http.withHeader('Authorization', 'bearer ' + auth.token);\n      });\n    }\n    return authenticated;\n  }\n\n  clearAuthentication() {\n    localStorage.twitter = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n}\n","export default class Fixtures {\n  baseUrl = 'https://damp-fjord-87496.herokuapp.com';\n  //baseUrl = 'http://localhost:4000';\n}\n","import moment from 'moment';\n\nexport default class Formatter {\n\n  formatTweetCreationDates(tweets) {\n    for (let index in tweets) {\n      if (moment(tweets[index].creationDate).fromNow() !== 'Invalid date') {\n        tweets[index].creationDate = moment(tweets[index].creationDate).format('DD.MM.YYYY HH:mm:ss');\n        tweets[index].formattedDate = moment(tweets[index].creationDate, 'DD.MM.YYYY HH:mm:ss').fromNow();\n      }\n    }\n  }\n\n}\n","export class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n\nexport class TweetsLoaded {\n  constructor(tweets) {\n    this.loadedTweets = tweets;\n  }\n}\n\nexport class MyTweetsLoaded {\n  constructor(tweets) {\n    this.loadedTweets = tweets;\n  }\n}\n\nexport class FriendTweetsLoaded {\n  constructor(tweets) {\n    this.loadedTweets = tweets;\n  }\n}\n\nexport class ValidationFailed {\n  constructor(validationType) {\n    this.validationType = validationType;\n  }\n}\n\nexport class ImageUploadFinished {\n  constructor(imageUrl) {\n    this.imageUrl = imageUrl;\n  }\n}\n\nexport class UsersDeleted {\n}\n\nexport class UsersLoaded {\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\nimport Formatter from './formatter';\n\nimport {\n  TweetsLoaded, MyTweetsLoaded, LoginStatus, ValidationFailed, ImageUploadFinished,\n  UsersDeleted, UsersLoaded, FriendTweetsLoaded\n} from './messages';\nimport { Router } from 'aurelia-router';\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient, Router, Formatter)\nexport default class TweetService {\n\n  tweets = [];\n  tweetsOfFriends = [];\n  mytweets = [];\n  users = [];\n  currentUserId;\n  currentUser;\n\n  constructor(data, ea, ac, rt, formatter) {\n    this.methods = data.methods;\n    this.ea = ea;\n    this.ac = ac;\n    this.rt = rt;\n    this.formatter = formatter;\n    this.getTweets();\n  }\n\n  postTweet(msg, picture) {\n    const tweet = {\n      message: msg,\n      picture: picture\n    };\n    this.ac.post('/api/tweets', tweet).then(res => {\n      const returnedTweet = res.content;\n      this.tweets.unshift(returnedTweet);\n      this.mytweets.unshift(returnedTweet);\n      this.formatter.formatTweetCreationDates(this.tweets);\n      this.formatter.formatTweetCreationDates(this.mytweets);\n      this.ea.publish(new TweetsLoaded(this.tweets));\n      this.ea.publish(new MyTweetsLoaded(this.mytweets));\n      this.rt.navigateToRoute('mytimeline');\n    }).catch(err =>{\n      this.ea.publish(new ValidationFailed('postTweet'));\n    });\n  }\n\n  getTweets() {\n    this.ac.get('/api/tweets').then(res => {\n      this.tweets = res.content;\n      this.formatter.formatTweetCreationDates(this.tweets);\n      this.ea.publish(new TweetsLoaded(this.tweets));\n    });\n  }\n\n  getTweetsOfFriends() {\n    this.ac.get('/api/users/followings/tweets').then(res => {\n      this.tweetsOfFriends = res.content;\n      this.formatter.formatTweetCreationDates(this.tweetsOfFriends);\n      this.ea.publish(new FriendTweetsLoaded(this.tweets));\n    });\n  }\n\n  deleteTweetLocally(id) {\n    const indexOfMyDeletedTweet = this.mytweets.map(t => t._id).indexOf(id);\n    if (indexOfMyDeletedTweet > -1) {\n      this.mytweets.splice(indexOfMyDeletedTweet, 1);\n    }\n\n    const indexOfGlobalTweet = this.tweets.map(t => t._id).indexOf(id);\n    if (indexOfGlobalTweet > -1) {\n      this.tweets.splice(indexOfGlobalTweet, 1);\n    }\n  }\n\n  deleteTweet(id) {\n    this.ac.delete('/api/tweets/' + id).then(res => {\n      if (res.statusCode === 204) {\n        this.deleteTweetLocally(id);\n      }\n    }).catch(err => {\n      console.log('error occured: ' + err);\n    });\n  }\n\n  deleteMyTweets() {\n    this.ac.delete('/api/users/' + this.currentUserId + '/tweets').then(res => {\n      if (res.statusCode === 204) {\n        for (let i = 0; i < this.mytweets.length; i++) {\n          const indexOfDeletedTweet = this.tweets.map(t => t._id).indexOf(this.mytweets[i]._id);\n          if (indexOfDeletedTweet > -1) {\n            this.tweets.splice(indexOfDeletedTweet, 1);\n          }\n        }\n        this.mytweets = [];\n      }\n    });\n  }\n\n  deleteAllTweetsOfUser(userId) {\n    this.ac.delete('/api/users/' + userId + '/tweets').then(res => {\n      if (res.statusCode === 204) {\n        this.getTweets();\n      }\n    });\n  }\n\n  deleteAllTweets() {\n    this.ac.delete('/api/tweets').then(res => {\n      if (res.statusCode === 204) {\n        this.getTweets();\n      }\n    });\n  }\n\n\n  getLoggedInUserPromise() {\n    return this.ac.get('/api/user');\n  }\n\n  followUser(id) {\n    this.ac.post('/api/users/' + id + '/followers', '{}').then(res => {\n      if (res.statusCode === 201) {\n        this.getUsers();\n        this.getTweetsOfFriends();\n      }\n    });\n  }\n\n  unfollowUser(id) {\n    this.ac.delete('/api/users/' + id + '/followers').then(res => {\n      if (res.statusCode === 204) {\n        this.getUsers();\n        this.getTweetsOfFriends();\n      }\n    });\n  }\n\n  getUserPromise(id) {\n    return this.ac.get('/api/users/' + id);\n  }\n\n\n  getTweetsOfUser(id) {\n    return this.ac.get('/api/users/' + id + '/tweets');\n  }\n\n  getMyTweets() {\n    this.ac.get('/api/users/' + this.currentUserId + '/tweets').then(res => {\n      this.mytweets = res.content;\n      this.formatter.formatTweetCreationDates(this.mytweets);\n    });\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n      const indexOfCurrentUser = this.users.map(u => u._id).indexOf(this.currentUserId);\n      this.currentUser = this.users[indexOfCurrentUser];\n      this.ea.publish(new UsersLoaded());\n    });\n  }\n\n  getDataForLoggedInUser() {\n    this.ac.get('/api/user').then(res => {\n      this.currentUserId = res.content.currentUserId;\n      return this.ac.get('/api/users');\n    }).then(res => {\n      this.users = res.content;\n      const indexOfCurrentUser = this.users.map(u => u._id).indexOf(this.currentUserId);\n      this.currentUser = this.users[indexOfCurrentUser];\n      this.getMyTweets();\n    }).catch(err => {\n      console.log('error occured: ' + err);\n    });\n\n    this.getTweetsOfFriends();\n  }\n\n  updateSettings(firstName, lastName, nickName, email, password, image) {\n    const updatedUser = {\n      firstName: firstName,\n      lastName: lastName,\n      nickName: nickName,\n      email: email,\n      password: password,\n      image: image\n    };\n\n    this.ac.post('/api/users/' + this.currentUserId, updatedUser).then(res => {\n      const content = res.content;\n      if (image.startsWith('data:image')) {\n        this.ea.publish(new ImageUploadFinished(content.imageUrl));\n      }\n\n      this.getUsers();\n      this.getTweets();\n      this.getMyTweets();\n      if (content.success) {\n        this.ac.updateTokenAndHeader(content);\n      }\n    });\n  }\n\n  register(firstName, lastName, nickName, email, password, forwardToLogin) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      nickName: nickName,\n      email: email,\n      password: password,\n      imageUrl: 'http://res.cloudinary.com/joa44741/image/upload/v1513337357/unknown_user_axspin.jpg',\n      isAdmin: false\n    };\n    this.ac.post('/api/users', newUser).then(res => {\n      this.getUsers();\n      if(forwardToLogin){\n        this.rt.navigateToRoute('login');\n      }\n    }).catch(err => {\n      this.ea.publish(new ValidationFailed('signup'));\n    });\n  }\n\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status));\n  }\n\n  isAuthenticated() {\n    return this.ac.isAuthenticated();\n  }\n\n  deleteAllUsers() {\n    this.ac.delete('/api/users').then(res => {\n      if (res.statusCode === 204) {\n        this.users = [];\n        this.ea.publish(new UsersDeleted());\n        this.getTweets();\n      }\n    });\n  }\n\n  deleteUser(id) {\n    this.ac.delete('/api/users/' + id).then(res => {\n      if (res.statusCode === 204) {\n        this.deleteUserLocally(id);\n        this.getTweets();\n      }\n    });\n  }\n\n  deleteUserLocally(id) {\n    const indexOfMyDeletedUser = this.users.map(t => t._id).indexOf(id);\n    if (indexOfMyDeletedUser > -1) {\n      this.users.splice(indexOfMyDeletedUser, 1);\n    }\n    this.ea.publish(new UsersDeleted());\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetsLoaded} from '../../services/messages';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService, EventAggregator)\nexport class Firehose {\n\n  tweets = [];\n  isDeletable = false;\n\n  constructor(ts, ea) {\n    console.log('constructor of firehose.js called');\n    this.tweetService = ts;\n    this.tweets = this.tweetService.tweets;\n    this.markOwnTweets();\n    this.ea = ea;\n\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n    this.tweetsLoadedSubscription = this.ea.subscribe(TweetsLoaded, msg => {\n      console.log('TweetsLoaded event was fired');\n      this.tweets = msg.loadedTweets;\n      this.markOwnTweets();\n    });\n\n    this.tweetService.getTweets();\n  }\n\n  markOwnTweets() {\n    for (let i = 0; i < this.tweets.length; i++) {\n      const tweet = this.tweets[i];\n      if (tweet.author._id === this.tweetService.currentUserId) {\n        tweet.isTweetOfCurrentUser = true;\n        this.tweets[i] = tweet;\n      }\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class Login {\n\n  errorMessage = null;\n  email = '';\n  password = '';\n  counter = 0;\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    ea.subscribe(LoginStatus, msg => {\n      if (msg.status.wrongLoginData) {\n        this.counter++;\n        this.errorMessage = 'wrong login data (' + this.counter + ' tries already)';\n        console.log(this.errorMessage);\n      } else if (msg.status.success) {\n        this.counter = 0;\n        this.errorMessage = null;\n      }\n    });\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import TweetService from '../../services/tweet-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TweetService)\nexport class Logout {\n\n  constructor(tweetService) {\n    this.tweetService = tweetService;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.tweetService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {MyTweetsLoaded} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class MyTimeline {\n\n  tweets = [];\n  isDeletable = true;\n  isMyTimeline = true;\n\n  selectedTweets = [];\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.ea = ea;\n    this.tweets = ts.mytweets;\n    this.user = ts.currentUser;\n  }\n\n  deleteSelectedTweets() {\n    this.selectedTweets.forEach(t => this.tweetService.deleteTweet(t));\n    this.tweets = this.tweetService.mytweets;\n    this.selectedTweets = [];\n  }\n\n  deleteAllTweets() {\n    this.tweetService.deleteMyTweets();\n    this.tweets = [];\n    this.selectedTweets = [];\n  }\n\n  attached() {\n    this.tweetsLoadedSubscription = this.ea.subscribe(MyTweetsLoaded, msg => {\n      this.tweets = msg.loadedTweets;\n      for (let i = 0; i < this.tweets.length; i++) {\n        const tweet = this.tweets[i];\n        tweet.isTweetOfCurrentUser = true;\n        this.tweets[i] = tweet;\n      }\n    });\n  }\n\n  detached() {\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class SearchForUsers {\n\n  filteredUsers = [];\n  users = [];\n  filter = '';\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.users = ts.users;\n    const indexOfCurrentUser = this.users.map(u => u._id).indexOf(ts.currentUserId);\n    if (indexOfCurrentUser > -1) {\n      this.users.splice(indexOfCurrentUser, 1);\n    }\n    this.filteredUsers = this.users;\n  }\n\n  filterChanged() {\n    if (this.filter === '') {\n      this.filteredUsers = this.users;\n    } else {\n      this.filteredUsers = [];\n      for (let user of this.users) {\n        if (user.firstName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.lastName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.nickName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.email.toUpperCase().includes(this.filter.toUpperCase())) {\n          this.filteredUsers.push(user);\n        }\n      }\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ImageUploadFinished} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class Settings {\n\n  firstName = '';\n  lastName = '';\n  nickName = '';\n  email = '';\n  password = '';\n  imageUrl = '';\n  picture = [];\n  loading = false;\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.ea = ea;\n    this.firstName = this.tweetService.currentUser.firstName;\n    this.lastName = this.tweetService.currentUser.lastName;\n    this.nickName = this.tweetService.currentUser.nickName;\n    this.email = this.tweetService.currentUser.email;\n    this.password = this.tweetService.currentUser.password;\n    this.imageUrl = this.tweetService.currentUser.imageUrl;\n  }\n\n  updateSettings() {\n    this.loading = true;\n    const reader = new window.FileReader();\n    reader.onload = () => {\n      let file = reader.result;\n      this.tweetService.updateSettings(this.firstName, this.lastName, this.nickName, this.email, this.password, file);\n    };\n\n    if (this.picture[0]) {\n      reader.readAsDataURL(this.picture[0]);\n    } else {\n      this.tweetService.updateSettings(this.firstName, this.lastName, this.nickName, this.email, this.password, this.imageUrl);\n      this.loading = false;\n    }\n  }\n\n  attached() {\n    this.tweetsLoadedSubscription = this.ea.subscribe(ImageUploadFinished, msg => {\n      this.imageUrl = msg.imageUrl;\n      this.loading = false;\n    });\n  }\n\n  detached() {\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport Formatter from '../../services/formatter';\n\n@inject(TweetService, Formatter)\nexport class ShowTimeline {\n\n  tweets = [];\n  isDeletable = false;\n  isMyTimeline = false;\n\n  constructor(ts, formatter) {\n    this.tweetService = ts;\n    this.formatter = formatter;\n  }\n\n  activate(params) {\n    const index = this.tweetService.users.map(u => u._id).indexOf(params.id);\n    this.user = this.tweetService.users[index];\n    this.tweetService.getTweetsOfUser(params.id).then(res => this.tweets = res.content);\n    this.formatter.formatTweetCreationDates(this.tweets);\n    this.isFollowing = this.tweetService.currentUser.followings.indexOf(params.id) > -1;\n  }\n\n  followUser() {\n    this.tweetService.followUser(this.user._id);\n    this.isFollowing = true;\n    this.user.followers.push(this.tweetService.currentUserId);\n  }\n\n  unfollowUser() {\n    this.tweetService.unfollowUser(this.user._id);\n    this.isFollowing = false;\n\n    const index = this.user.followers.indexOf(this.tweetService.currentUserId);\n    if (index > -1) {\n      this.user.followers.splice(index, 1);\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationFailed} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class Signup {\n\n  firstName = '';\n  lastName = '';\n  nickName = ''\n  email = '';\n  password = '';\n  errorMessage = null;\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    ea.subscribe(ValidationFailed, msg => {\n      if (msg.validationType === 'signup') {\n        this.errorMessage = 'Signup process failed. Maybe the email address is already in use.';\n        console.log(this.errorMessage);\n      } else if (msg.status.success) {\n        this.errorMessage = null;\n      }\n    });\n  }\n\n  register(e) {\n    this.tweetService.register(this.firstName, this.lastName, this.nickName, this.email, this.password, true);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UsersDeleted, UsersLoaded} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class Statistics {\n\n  usersWithMostFollowers = [];\n  usersWithMostTweets = [];\n  userCount;\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.usersWithMostFollowers = this.tweetService.users.slice(0);\n    this.usersWithMostFollowers.sort((a, b)=> b.followers.length - a.followers.length);\n    this.usersWithMostFollowers = this.usersWithMostFollowers.slice(0, 3);\n\n    this.usersWithMostTweets = this.tweetService.users.slice(0);\n    for(let i in this.usersWithMostTweets){\n      this.usersWithMostTweets[i].tweetsCount = 0;\n    }\n\n    for(let tweet of this.tweetService.tweets){\n        let index = this.usersWithMostTweets.map(user => user._id).indexOf(tweet.author._id);\n        if(index > -1){\n          this.usersWithMostTweets[index].tweetsCount++;\n        }\n    }\n\n    this.usersWithMostTweets.sort((a, b)=> b.tweetsCount - a.tweetsCount);\n    this.usersWithMostTweets = this.usersWithMostTweets.slice(0, 3);\n\n    // minus 1 because of the admin account which doesn't count\n    this.userCount = this.tweetService.users.length;\n    this.tweetCount = this.tweetService.tweets.length;\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationFailed} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\n@inject(TweetService)\nexport class Tweet {\n  message = '';\n  picture = [];\n  errorMessage = null;\n  loading = false;\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.users = ts.users;\n    this.ea = ea;\n    const indexOfCurrentUser = this.users.map(u => u._id).indexOf(ts.currentUserId);\n    if (indexOfCurrentUser > -1) {\n      this.users.splice(indexOfCurrentUser, 1);\n    }\n  }\n\n  attached() {\n    this.tweetsLoadedSubscription = this.ea.subscribe(ValidationFailed, msg => {\n      if (msg.validationType === 'postTweet') {\n        this.errorMessage = 'The validation failed. Message must not be empty and file must not be too large';\n      }\n    });\n  }\n\n  detached() {\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n  }\n\n  postTweet() {\n    this.loading = true;\n    const reader = new window.FileReader();\n    reader.onload = () => {\n      let file = reader.result;\n      this.tweetService.postTweet(this.message, file);\n    };\n\n    if (this.picture[0]) {\n      reader.readAsDataURL(this.picture[0]);\n    } else {\n      this.tweetService.postTweet(this.message, null);\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {TweetsLoaded} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class TweetMgmt {\n\n  users = [];\n  filteredUsers = [];\n  tweets = [];\n  filter = '';\n  selectedTweets = [];\n  selectedUserId;\n  selectedUser = null;\n  userAll = {\n    _id: -1,\n    imageUrl: 'http://res.cloudinary.com/joa44741/image/upload/v1513337357/unknown_user_axspin.jpg',\n    nickName: 'All users'\n  }\n\n  constructor(ts, ea) {\n    this.tweetService = ts;\n    this.ea = ea;\n    this.tweets = this.tweetService.tweets;\n    this.getUsersList();\n  }\n\n  selectUser(user) {\n    this.selectedUserId = user;\n    if (this.selectedUserId === this.userAll._id) {\n      this.tweets = this.tweetService.tweets;\n      this.selectedUser = null;\n    } else {\n      this.tweets = this.tweetService.tweets.filter(tweet => tweet.author._id === this.selectedUserId);\n      this.selectedUser = this.users.filter(u => u._id === this.selectedUserId)[0];\n    }\n  }\n\n  getUsersList() {\n    this.users = [];\n\n    this.users.push(this.userAll);\n\n    for (let tweet of this.tweets) {\n      const indexOfUser = this.users.map(u => u._id).indexOf(tweet.author._id);\n      if (indexOfUser === -1) {\n        this.users.push(tweet.author);\n      }\n    }\n    this.filteredUsers = this.users;\n    const indexOfUser = this.filteredUsers.map(u => u._id).indexOf(this.selectedUserId);\n    if (indexOfUser === -1) {\n      this.selectedUserId = null;\n      this.selectedUser = null;\n    }\n  }\n\n  filterChanged() {\n    if (this.filter === '') {\n      this.filteredUsers = this.users;\n    } else {\n      this.filteredUsers = [];\n      this.filteredUsers.push(this.userAll);\n      for (let user of this.users) {\n        if (user === this.userAll) {\n          continue;\n        }\n        if (user.firstName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.lastName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.nickName.toUpperCase().includes(this.filter.toUpperCase()) ||\n          user.email.toUpperCase().includes(this.filter.toUpperCase())) {\n          this.filteredUsers.push(user);\n        }\n      }\n      const index = this.filteredUsers.map(u => u._id).indexOf(this.selectedUserId);\n      if (index === -1) {\n        this.selectedUserId = null;\n        this.selectedUser = null;\n      }\n    }\n  }\n\n  deleteSelectedTweets() {\n    for (let tweetId of this.selectedTweets) {\n      this.tweetService.deleteTweet(tweetId);\n    }\n  }\n\n  deleteAllTweetsOfSelectedUser() {\n    this.tweetService.deleteAllTweetsOfUser(this.selectedUserId);\n  }\n\n  deleteAllTweets() {\n    this.tweetService.deleteAllTweets();\n  }\n\n  attached() {\n    this.tweetsLoadedSubscription = this.ea.subscribe(TweetsLoaded, msg => {\n      this.selectedTweets = [];\n      this.tweets = msg.loadedTweets;\n      this.getUsersList();\n    });\n  }\n\n  detached() {\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {FriendTweetsLoaded} from '../../services/messages';\n\n@inject(TweetService, EventAggregator)\nexport class TweetsOfFriends {\n\n  tweets = [];\n  isDeletable = false;\n\n  constructor(ts, ea) {\n    this.ea = ea;\n    this.tweetService = ts;\n    this.tweets = ts.tweetsOfFriends;\n  }\n\n  attached() {\n    this.tweetsLoadedSubscription = this.ea.subscribe(FriendTweetsLoaded, msg => {\n      this.tweets = msg.loadedTweets;\n    });\n  }\n\n  detached() {\n    if (this.tweetsLoadedSubscription) {\n      this.tweetsLoadedSubscription.dispose();\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\r\nimport TweetService from '../../services/tweet-service';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {UsersDeleted, UsersLoaded, ValidationFailed} from '../../services/messages';\r\n\r\n@inject(TweetService, EventAggregator)\r\nexport class UserMgmt {\r\n\r\n  filteredUsers = [];\r\n  users = [];\r\n  filter = '';\r\n  selectedUsers = [];\r\n\r\n  firstName = '';\r\n  lastName = '';\r\n  nickName = '';\r\n  email = '';\r\n  password = '';\r\n\r\n  constructor(ts, ea) {\r\n    this.tweetService = ts;\r\n    this.ea = ea;\r\n    this.tweetService.getUsers();\r\n    this.getUsersList();\r\n\r\n    this.ea.subscribe(ValidationFailed, msg => {\r\n      if (msg.validationType === 'signup') {\r\n        this.errorMessage = 'Registration process failed. Maybe the email address is already in use.';\r\n      } else if (msg.status.success) {\r\n        this.errorMessage = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  getUsersList() {\r\n    this.users = this.tweetService.users;\r\n    const indexOfCurrentUser = this.users.map(u => u._id).indexOf(this.tweetService.currentUserId);\r\n    if (indexOfCurrentUser > -1) {\r\n      this.users.splice(indexOfCurrentUser, 1);\r\n    }\r\n    this.filteredUsers = this.users;\r\n  }\r\n\r\n  filterChanged() {\r\n    if (this.filter === '') {\r\n      this.filteredUsers = this.users;\r\n    } else {\r\n      this.filteredUsers = [];\r\n      for (let user of this.users) {\r\n        if (user.firstName.toUpperCase().includes(this.filter.toUpperCase()) ||\r\n          user.lastName.toUpperCase().includes(this.filter.toUpperCase()) ||\r\n          user.nickName.toUpperCase().includes(this.filter.toUpperCase()) ||\r\n          user.email.toUpperCase().includes(this.filter.toUpperCase())) {\r\n          this.filteredUsers.push(user);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteSelectedUsers() {\r\n    for (let userId of this.selectedUsers) {\r\n      this.tweetService.deleteUser(userId);\r\n    }\r\n  }\r\n\r\n  deleteAllUsers() {\r\n    this.tweetService.deleteAllUsers();\r\n  }\r\n\r\n  register(e) {\r\n    this.errorMessage = null;\r\n    this.tweetService.register(this.firstName, this.lastName, this.nickName, this.email, this.password, false);\r\n  }\r\n\r\n  attached() {\r\n    console.log('attached'); \r\n    this.usersLoadedSubscription = this.ea.subscribe(UsersLoaded, msg => {\r\n      this.getUsersList();\r\n    });\r\n    this.tweetsLoadedSubscription = this.ea.subscribe(UsersDeleted, msg => {\r\n      this.selectedUsers = [];\r\n      this.getUsersList();\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    if (this.tweetsLoadedSubscription) {\r\n      this.tweetsLoadedSubscription.dispose();\r\n    }\r\n    if (this.usersLoadedSubscription) {\r\n      this.usersLoadedSubscription.dispose();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":".."}